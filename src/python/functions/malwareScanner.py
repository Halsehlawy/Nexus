import os
import time
import requests
from dotenv import load_dotenv

load_dotenv()
VT_API_KEY = os.getenv("VT_API_KEY")
VT_UPLOAD_URL = "https://www.virustotal.com/api/v3/files"
VT_REPORT_URL = "https://www.virustotal.com/api/v3/analyses/{}"

headers = {
    "x-apikey": VT_API_KEY
}

def upload_to_virustotal(file_path: str):
    headers = {"x-apikey": os.getenv("VT_API_KEY")}
    with open(file_path, "rb") as f:
        files = {"file": f}
        response = requests.post("https://www.virustotal.com/api/v3/files", headers=headers, files=files)

    print("Upload status:", response.status_code)
    print("Upload response:", response.text)  # <- this will reveal if it's a quota, type, or file issue

    if response.status_code == 200:
        data = response.json()
        return {"status": "uploaded", "analysis_id": data["data"]["id"]}
    else:
        return {"status": "error", "message": response.text}


def fetch_vt_report(analysis_id: str):
    headers = {"x-apikey": os.getenv("VT_API_KEY")}
    url = f"https://www.virustotal.com/api/v3/analyses/{analysis_id}"

    for _ in range(20):  # wait up to 60s
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            data = response.json()
            status = data["data"]["attributes"]["status"]
            if status == "completed":
                stats = data["data"]["attributes"]["stats"]
                verdict = "Malicious" if stats["malicious"] > 0 else "Clean"
                return {
                    "status": "completed",
                    "verdict": verdict,
                    "malicious": stats["malicious"],
                    "suspicious": stats["suspicious"],
                    "undetected": stats["undetected"],
                    "harmless": stats["harmless"]
                }
        elif response.status_code == 409:  # ConflictError = 409
            print("VT backend timeout:", response.text)
            return {
                "status": "error",
                "message": "VirusTotal backend timed out during scan. Please try again later."
            }

        time.sleep(3)

    return {"status": "timeout", "message": "VirusTotal scan timed out after 60s."}

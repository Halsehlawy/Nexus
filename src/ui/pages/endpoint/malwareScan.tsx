import { useNavigate } from "react-router-dom"
import { useState, useRef } from "react"
import Layout from "../../components/Layout"
import { ArrowLeft } from "lucide-react"
import "../../styles/EndpointSecurity.css"

const MalwareScan = () => {
  const navigate = useNavigate()
  const fileInputRef = useRef<HTMLInputElement>(null)

  const [file, setFile] = useState<File | null>(null)
  const [result, setResult] = useState<any>(null)
  const [loading, setLoading] = useState(false)

  const handleSubmit = async () => {
    if (!file) return

    const formData = new FormData()
    formData.append("file", file)

    setLoading(true)
    setResult(null)

    try {
      const res = await fetch("http://127.0.0.1:8000/scan-malware", {
        method: "POST",
        body: formData
      })

      const data = await res.json()

      if (data.status === "error" || data.status === "timeout") {
        setResult({ status: data.status, message: data.message || "Scan failed" })
      } else {
        setResult(data)
      }

    } catch (err) {
      console.error(err)
      setResult({ status: "error", message: "Scan failed" })
    } finally {
      setLoading(false)
      setFile(null)
      setTimeout(() => {
        if (fileInputRef.current) fileInputRef.current.value = ""
      }, 100)
    }
  }

  return (
    <Layout title="Malware Scan">
      <div className="back-button-container">
        <button className="button" onClick={() => navigate("/endpoint-security")}>
          <ArrowLeft size={16} style={{ marginRight: "6px" }} />
          Go Back
        </button>
      </div>

      <div className="container-box">
        <div className="scan-action-row">
          <button
            className="button"
            onClick={handleSubmit}
            disabled={!file || loading}
          >
            {loading ? (
              <div className="loading-spinner-container">
                <div className="loading-spinner" />
                Scanning...
              </div>
            ) : (
              "Scan File"
            )}
          </button>

          <input
            ref={fileInputRef}
            type="file"
            className="input"
            onChange={(e) => {
              setFile(e.target.files?.[0] || null)
              setResult(null)
            }}
          />
        </div>

        {result && result.status === "completed" && (
          <div className={`result-box ${result.malicious > 0 ? "result-danger" : "result-safe"}`}>
            <p><strong>Verdict:</strong> {result.verdict}</p>
            <p><strong>Malicious:</strong> {result.malicious}</p>
            <p><strong>Suspicious:</strong> {result.suspicious}</p>
            <p><strong>Undetected:</strong> {result.undetected}</p>
            <p><strong>Harmless:</strong> {result.harmless}</p>
          </div>
        )}

        {result && result.status === "timeout" && (
          <div className="result-box result-danger">
            <p>Scan timed out. Please try again.</p>
          </div>
        )}

        {result && result.status === "error" && (
          <div className="result-box result-danger">
            <p>Error: {result.message}</p>
          </div>
        )}
      </div>
    </Layout>
  )
}

export default MalwareScan
